#!/bin/bash
#
# CONFIGURATION

# Set this to your (stylus) device. Find it by running:
# xsetwacom --list devices
#DEVICE='Wacom Graphire4 6x8 stylus'
#DEVICE='Wacom Intuos3 6x8 stylus'

# Experimental auto config of DEVICE name:-
# N.B some tablets have an empty 4th column in their name
# ie "Wacom Volito stylus " hence the trailing space removal in above
# with the sed -e 's/[[:space:]]*$//'
STYLUS=$(xsetwacom --list | grep STYLUS | cut -d ' ' -f 1-4 | sed -e 's/[[:space:]]*$//')

# Get the ERASER (other end of STYLUS) device name
ERASER=$(xsetwacom --list | grep ERASER | cut -d ' ' -f 1-4 | sed -e 's/[[:space:]]*$//')

# Get the CURSOR (mouse) device name
# N.B. this is usually read and auto configured in relative mode so irrelevant
# CURSOR=$(xsetwacom --list | grep CURSOR | cut -d ' ' -f 1-4 | sed -e 's/[[:space:]]*$//')

# set the DEVICE to the STYLUS (the pen)
# DEVICE=$STYLUS

if [ "$STYLUS" == "" ]; then
	echo "No Wacom device found: aborting"
	exit 1
fi

# These numbers are specific for each device. Get them by running:
# xsetwacom --set "Your device name here" ResetArea
# xsetwacom --get "Your device name here" Area
#AREAX=40640
#AREAY=30480

# Experimental auto config of STYLUS tablet resolution
# first to reset the area to it's default and then ask what it is
xsetwacom --set "$STYLUS" ResetArea
STYLUS_AREA=$(xsetwacom --get "$STYLUS" Area)
# then retrieve from column 3 and 4 the X and Y dimensions
# example output of eg:-
# xsetwacom --get "Wacom Intuos3 6x8 stylus" Area
# 0 0 40640 30480
AREAX=$(echo $STYLUS_AREA | cut -d ' ' -f 3)
AREAY=$(echo $STYLUS_AREA | cut -d ' ' -f 4)

# uncomment to display / degug stylus read area
#echo "$STYLUS area = $AREAX x $AREAY"

# alter around if these are in the wrong order
# Only used with nvidia drivers (not the nouveau)
# NVIDIA_MONITOR_NAMES=( HEAD-0 HEAD-1 HEAD-2 HEAD-3 )
NVIDIA_MONITOR_NAMES=( HEAD-1 HEAD-0 HEAD-2 HEAD-3 )

# END OF CONFIGURATION


NVIDIA="$(lsmod | sed -n '/^nvidia/p')"
# If non empty then we are running nvidia proprietary module

SCREEN="$1"

CONNECTED_DISPLAYS=`xrandr -q --current | sed -n 's/^\([^ ]\+\) connected .*/\1/p'`

if [ -z "$SCREEN" -o "$SCREEN" = "--help" -o "$SCREEN" = "-help" -o "$SCREEN" = "-h" ]; then
	echo
	echo "This script configures a Wacom tablet to a specified monitor, or to "
	echo "the entire desktop. The Aspect ratio is preserved by reducing the"
	echo "discovered $STYLUS working area."
	echo
	echo "How to run this script? Run one of the following lines:"
	for d in desktop $CONNECTED_DISPLAYS; do
		echo "  $0 $d"
	done
	exit
fi

if [ "$SCREEN" = "desktop" ]; then
	# Sample xrandr line:
	# Screen 0: minimum 320 x 200, current 3286 x 1080, maximum 32767 x 32767
	LINE=`xrandr -q --current | sed -n 's/^Screen 0:.*, current \([0-9]\+\) x \([0-9]\+\),.*/\1 \2/p'`
	read WIDTH HEIGHT <<< "$LINE"
else
	# Sample xrandr lines:
	# LVDS1 connected 1366x768+0+312 (normal left inverted right x axis y axis) 309mm x 174mm
	# VGA1 disconnected (normal left inverted right x axis y axis)
	# HDMI1 connected 1920x1080+1366+0 (normal left inverted right x axis y axis) 509mm x 286mm
	# but from nvidia proprietary we have:-
	# LVDS-0 connected primary 1440x900+0+0 (normal left inverted right x axis y axis) 367mm x 230mm
	# so we have a "primary" in there.
	LINE=`xrandr -q --current | sed -n "s/^${SCREEN} connected"'.* \([0-9]\+\)x\([0-9]\+\)+.*/\1 \2/p'`
	read WIDTH HEIGHT <<< "$LINE"
fi

if [ -z "$WIDTH" -o -z "$HEIGHT" ]; then
	echo "Aborting: output dimensions unavailable."
	exit 1
else
	#echo "Output area = $WIDTH x $HEIGHT"
	OUTPUT_AREA="($WIDTH X $HEIGHT)"
fi

# New values respecint aspect ratio:
RATIOAREAY=$(( AREAX * HEIGHT / WIDTH ))
RATIOAREAX=$(( AREAY * WIDTH / HEIGHT ))

if [ "$AREAY" -gt "$RATIOAREAY" ]; then
	NEWAREAX="$AREAX"
	NEWAREAY="$RATIOAREAY"
else
	NEWAREAX="$RATIOAREAX"
	NEWAREAY="$AREAY"
fi

# xsetwacom --set "$DEVICE" Area 0 0 "$NEWAREAX" "$NEWAREAY"
xsetwacom --set "$STYLUS" Area 0 0 "$NEWAREAX" "$NEWAREAY"
xsetwacom --set "$ERASER" Area 0 0 "$NEWAREAX" "$NEWAREAY"

if [ "$NVIDIA" == "" ]; then
	# we are not nvidia proprietary so using MapToOutput $SCREEN
	echo "MapToOutput $SCREEN $OUTPUT_AREA"
	xsetwacom --set "$STYLUS" MapToOutput $SCREEN
	xsetwacom --set "$ERASER" MapToOutput $SCREEN
else
	# we are nvidia proprietary
	if [ "$SCREEN" == "desktop" ]; then
		echo "Nvidia driver: MapToOutput desktop $OUTPUT_AREA"
		xsetwacom --set "$STYLUS" MapToOutput desktop
		xsetwacom --set "$ERASER" MapToOutput desktop
	else
		#map to one of the HEAD-# entries in NVIDIA_MONITOR_NAMES
		COUNT=0
		for d in $CONNECTED_DISPLAYS; do
			if [ "$SCREEN" == "$d" ]; then
				#we have found our match so use it
				echo "Nvidia driver: MapToOutput ${NVIDIA_MONITOR_NAMES[$COUNT]} $OUTPUT_AREA"
				xsetwacom --set "$STYLUS" MapToOutput ${NVIDIA_MONITOR_NAMES[$COUNT]}
				xsetwacom --set "$ERASER" MapToOutput ${NVIDIA_MONITOR_NAMES[$COUNT]}
			fi
			let "COUNT++"
		done
	fi
fi


# $ xsetwacom --list devices
# Wacom Graphire4 6x8 stylus      	id: 9	type: STYLUS
# Wacom Graphire4 6x8 eraser      	id: 10	type: ERASER
# Wacom Graphire4 6x8 cursor      	id: 11	type: CURSOR
# Wacom Graphire4 6x8 pad         	id: 12	type: PAD

# $ xsetwacom --list
# Wacom Volito stylus             	id: 17	type: STYLUS    
# Wacom Volito eraser             	id: 18	type: ERASER    
# Wacom Volito cursor             	id: 19	type: CURSOR    

# $ xsetwacom --list
# Wacom Intuos3 6x8 Pad pad       	id: 17	type: PAD       
# Wacom Intuos3 6x8 stylus        	id: 18	type: STYLUS    
# Wacom Intuos3 6x8 eraser        	id: 19	type: ERASER    
# Wacom Intuos3 6x8 cursor        	id: 20	type: CURSOR 

# Button mappings only apply to the "pad" device.
# The wheel on Graphire4 acts as mouse buttons 4 and 5 (as a mouse wheel)
# The buttons on Graphire4 act as mouse buttons 8 and 9

# Default Area: 0 0 16704 12064
# ResetArea
#
# Other potentially useful parameters:
# * Mode: absolute or relative
# * Rotate: none, cw, ccw, half
# * MapToOutput: "next" (but is buggy), "desktop", or a name from xrandr
# * N.B. If using the Nvidia proprietary driver the xrandr port names don't work
# * in this case we need to use HEAD-0 or HEAD-1 etc

